worker_processes auto;
error_log /var/log/dbimport/webServer_error.log notice;
pid /usr/local/dbimport/run/dbimport_webserver.pid;

events {
    worker_connections 256;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/dbimport/webServer_access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    client_body_buffer_size     10M;
    client_max_body_size        10M;
    client_body_temp_path       /usr/local/dbimport/run/client_body;
    proxy_temp_path             /usr/local/dbimport/run/proxy;
    fastcgi_temp_path           /usr/local/dbimport/run/fastcgi;
    uwsgi_temp_path             /usr/local/dbimport/run/uwsgi;
    scgi_temp_path              /usr/local/dbimport/run/scgi;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server {
        listen       5180 ssl;
        http2        on;
        server_name  _;
        root         /usr/local/dbimport/bin/Server/html/dist;

        ssl_certificate "/usr/local/dbimport/conf/CERTFILE";
        ssl_certificate_key "/usr/local/dbimport/conf/KEYFILE";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
     
        # Serve static files (HTML, JS, CSS)
        location / {
            try_files $uri $uri/ /index.html;
        }

        #  Proxy API requests to the backend
        location /api {
            rewrite ^/api/(.*)$ /$1 break;  # Strip the /api prefix before proxying
            proxy_pass https://127.0.0.1:5188;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        } 
    }
}
